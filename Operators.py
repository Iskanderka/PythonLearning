# # разнообразные операторы
# # математические
# print("3 + 5 даст {}; 'a' + 'b' даст {}".format(3 + 5, 'a' + 'b'))  # суммирует 2 объекта
# print("{} - отрицательное число, 50 - 24 даст {}".format(-5.2, 50 - 24))  # если первый оператор отсутствует, то он 0
# print("2 * 3 дас {}, 'la' * 3 даст {}".format(2 * 3, 'la' * 3))  # можно множить строки
# print("3 ** 3 даст {}".format(3 ** 4))  # возведение в степень
# print("4 / 3 даст {}".format(4 / 3))  # обычное деление
# print("4 // 3 даст {}".format(4 // 3))  # целочисленное деление
# print("8 % 3 даст {}, -25.5 % 2.25 даст {}".format(8 % 3, -25.5 % 2.25))  # возвращает остаток от деления
# # побитовые операции
# print("2 << 2 даст {} (10 -> 1000), 11 >> 1 даст {} (1011 -> 101)".format(2 << 2, 11 >> 1))  # побитовые сдвиги
# print("5 & 3 даст {}, 5 | 3 даст {}".format(5 & 3, 5 | 3))  # "и" и "или"
# print("5 ^ 3 даст {}, ~5 даст {}".format(5 ^ 3, ~5))  # исключительно или, побитовое не, хз как работает
# # логические операторы
# print("5 < 3 даст {}, 3 < 3 даст {}. Также возможно 3 < 5 < 1000 - {}".format(5 < 3, 3 < 5, 3 < 5 < 1000))
# print("3 <= 3 даст {}, 5 >= 4 даст {}".format(3 <= 3, 5 >= 4))
# print("2 == 2 даст {}, 'str' == 'str' даст {}, 'str' == 2 даст {}, 2 != 2 даст {}, 'str' == 'Str' даст {}".
#       format(2 == 2, 'str' == 'str', 'str' == 2, 2 != 2,
#              'str' != 'Str'))  # эквивалентность объектов. оказывается строки можно переносить без \
# x = True
# print("x = True, not x даст {}, not (3 == 3) даст {}".format(not x, not 3 == 3))
# x = True
# y = False
# print("x = True, y = False, x and y даст {}, x or y даст {}".format(x and y, x or y))  # логические "и" и "или"
# # если первый операнд - False, то при использовании and остальные операнды не проверяются, то же и для or и True
#
# a = 2; a = a * 3 можно записать в виде a = 2; a *= 3
# приоритет операций приводить не буду, лучше используйте скобки
# ассоциативность работает слева направо, присваивание справа налево

# пример
length = 5
breadth = 2
area = length * breadth
print('Площадь равна', area)  # замечу, что после слова "равно" пробела изначально не было, питон сам его поставил
print('Периметр равен', 2 * (length + breadth))
print(2, "str", length)  # вон оно что, михалыч, у принта может быть несколько аргументов

