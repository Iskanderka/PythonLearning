# def two_returns():  # возможность возврата двух результатов, для этого используется кортеж
#     return 2, "Второй результат"
#
#
# number, string = two_returns()
#
# print("Функция вернуда число {} и строку '{}'".format(number, string))

# # ещё немного про множественное присваивание
#
# a = 5
# b = 8
#
# print("a = {}, b = {}".format(a, b))
#
# a, b = b, a
#
# print("a = {}, b = {}".format(a, b))
#
# a, *b = [1, 2, 3, 4]  # похоже на то, как было для нескольких аргументов функции
#
# print("a = {}, b = {}".format(a, b))

# listone = [2, 3, 4]
# listtwo = [2*i for i in listone if i > 2]  # генерирует список на основе другого, старый список не изменится
# print(listtwo)

# exec('print("Здравствуй, Мир!")')  # выполняет строку в виде кода питона
#
# print(eval('2*3'))  # вычисляет и возвращет вычисленное значение

# mylist = ["item"]
#
# assert len(mylist) >= 1  # утверждаем, что это истинно. Если нет, то вызываем ошибку
#
# print(mylist.pop())  # pop удаляет значение из списка и возаращает удалённое значение
#
# print(mylist)
#
# assert len(mylist) >= 1

# i = []
# i.append("item")
# print(repr(i))  # возвращает строковое представление объекта
#
# print(eval(repr(i)))
#
# print(eval(repr(i)) == i)  #

# print(r"Перевод строки обозначается \n")  # r перед строкой - она не обрабатывает управляющие последовательностит

